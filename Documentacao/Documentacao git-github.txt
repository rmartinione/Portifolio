Comandos

Git
git init -> inicializa repositório git
git status -> verificar status do git
git add nome-do-arquivo -> prepara arquivo do repositorio para preparar para realizar o controle de versão(Git)
git add . -> prepara todos os arquivos do repositorio para preparar para realizar o controle de versão(Git)
git status -> verificar status do git
git commit -m "explicacao da versão do codigo" --> criar versão do código
git config --global user.email "seu-email@exemplo.com" (não está relacionado com github - email do codigo)
git config --global user.name "nome-do-usuario" (não está relacionado com github - autor do codigo)
git commit -m "explicacao da versão do codigo" --> criar versão do código
git log -> mostra log das versões dos commit's (Versão do controle de codigo - log)
Caso já exista o usuário.
git commit --amend --reset-author -> corrigir a identidade usada para este commit
-----------------------------------------
Gerenciamento de versões (GIT)

git log
git checkout (id do commit) -> navegar para commit
git log --all -> ira mostrar todos os commits
git chechout (branch master) -> volta para o commit mais recente
git commit -m "explicacao da versão do codigo" --> criar versão do código

Branch -> Ramificação
git log 
git checkout -b (nome da branch) > navegar para commit
git branch
(modificamos o codigo)
git add .
git status
git commit -m "alteração commit da branch = versionamento" (formas de documentar para branch)
git chechout (branch master) -> volta para o commit mais recente
git branch (nome da principal)
git branch (nome da ramificação)
git branch (nome da principal)
git merge (nome da ramificação) -> (juntar as modificações da ramificação para incorporar no principal)
git log 
git branch
-----------------------------------------
Git - Github colaboração - copiar os arquivos da maquina para o github
Criar repositório no github
git remote add origin (link do repositorio) -> enviar projeto para github (conecta git-github)
git branch -M main(ou nome da branch principal desejado) (Caso desejar, ele renomeia a branch principal para o nome main
git push -u origin main (nome da branch)
Após criação, para modificar, como atualizar
git add .
git commit -m "versão"
git push

para pegar o arquivo do github para o computador
abra o terminal e acesse via cd\nome-da-pasta
git clone url-do-projeto

projetos em equipe
no github.
Localize o projeto, clique em fork para copiar para sua conta
Ao clicar em fork, selecione a pasta do projeto e clique em fork
git clone url-do-projeto no qual fez o fork
acesse a pasta e digite no terminal code .
git checkout -b nome-da-branch-colaborativa
git branch
faça as alterações necessárias
git add .
git commit -m "digite as alterações das versões"
git push origin nome-da-branch-colaborativa
no github, clique em open pull request, para que o time aprove.
na proxima tela, digite a mensagem desejada para a pessoa.
clique em create pull request


